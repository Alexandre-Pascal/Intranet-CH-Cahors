generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model main_categories {
  category_id    Int              @id @default(autoincrement())
  category_name  String           @db.VarChar(100)
  category_order Int
  sub_categories sub_categories[]
}

model sub_categories {
  sub_category_id    Int             @id @default(autoincrement())
  category_id        Int
  sub_category_name  String          @db.VarChar(100)
  sub_category_url   String?
  sub_category_order Int
  main_categories    main_categories @relation(fields: [category_id], references: [category_id], onDelete: Cascade, onUpdate: NoAction)
  titles             titles[]
}

model titles {
  title_id        Int            @id(map: "sub_titles_pkey") @default(autoincrement())
  sub_category_id Int
  title_name      String         @db.VarChar(100)
  title_url       String?
  title_order     Int
  sub_categories  sub_categories @relation(fields: [sub_category_id], references: [sub_category_id], onDelete: Cascade, onUpdate: NoAction, map: "sub_titles_sub_category_id_fkey")
}

model datas_articles {
  title   String?  @db.VarChar(255)
  id      String   @id @default(dbgenerated("lower(regexp_replace(replace(replace(translate((title)::text, 'áéíóúÁÉÍÓÚàèìòùÀÈÌÒÙâêîôûÂÊÎÔÛäëïöüÄËÏÖÜ'::text, 'aeiouAEIOUaeiouAEIOUaeiouAEIOUaeiouAEIOU'::text), ''''::text, '-'::text), ' '::text, '-'::text), '[^a-zA-Z0-9_-]'::text, ''::text, 'g'::text))")) @db.VarChar(255)
  content String?
  files   String[] @db.VarChar(255)
}
